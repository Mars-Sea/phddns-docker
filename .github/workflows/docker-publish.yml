name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: ["main", "patch-*"]
  pull_request:
    branches: ["main", "patch-*"]

env:
  # Use docker.io for Docker Hub if empty
  # REGISTRY: ghcr.io
  REGISTRY: docker.io
  PHDDNS_VERSION: 5.2.0
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Set Docker image name
        id: set_image_name
        run: |
          if [[ -z "${{ secrets.REGISTRY_USERNAME }}" ]];then
            echo '
                请在 Settings > secrets > Actions 中添加 REGISTRY_USERNAME, REGISTRY_TOKEN
                https://github.com/docker/login-action#docker-hub
                https://docs.docker.com/docker-hub/access-tokens/
            '
            if [[ ${{ github.event_name }} != 'pull_request' }}  ]];then
                exit 1
            fi
            owner=${{ github.repository_owner }}
            if [[ "${owner}" == "Mars-Sea" ]]; then
                IMAGE_NAME="mars119/phddns";
            else
                IMAGE_NAME="${owner}/phddns";
            fi
          else
            echo "现在可以移除 33-46, 48行"
            IMAGE_NAME="${{ secrets.REGISTRY_USERNAME }}/phddns";
          fi
            echo "IMAGE_NAME=${IMAGE_NAME}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: "v1.13.1"

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ steps.set_image_name.outputs.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          labels: |
            org.opencontainers.image.version=${{ env.PHDDNS_VERSION }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ env.REGISTRY }}/${{ steps.set_image_name.outputs.IMAGE_NAME }}:test
          cache-from: type=registry,ref=${{ steps.set_image_name.outputs.IMAGE_NAME }}:buildcache
          cache-to: type=inline

      - name: Test
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ steps.set_image_name.outputs.IMAGE_NAME }}:test phddns status

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: ${{ github.event_name != 'pull_request' }}
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=inline
          cache-to: type=registry,ref=${{ steps.set_image_name.outputs.IMAGE_NAME }}:buildcache,mode=max
          
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
